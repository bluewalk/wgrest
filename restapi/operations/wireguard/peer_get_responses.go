// Code generated by go-swagger; DO NOT EDIT.

package wireguard

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/suquant/wgrest/models"
)

// PeerGetOKCode is the HTTP code returned for type PeerGetOK
const PeerGetOKCode int = 200

/*PeerGetOK ok

swagger:response peerGetOK
*/
type PeerGetOK struct {

	/*
	  In: Body
	*/
	Payload *models.WireguardPeer `json:"body,omitempty"`
}

// NewPeerGetOK creates PeerGetOK with default headers values
func NewPeerGetOK() *PeerGetOK {

	return &PeerGetOK{}
}

// WithPayload adds the payload to the peer get o k response
func (o *PeerGetOK) WithPayload(payload *models.WireguardPeer) *PeerGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the peer get o k response
func (o *PeerGetOK) SetPayload(payload *models.WireguardPeer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PeerGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PeerGetNotFoundCode is the HTTP code returned for type PeerGetNotFound
const PeerGetNotFoundCode int = 404

/*PeerGetNotFound peer/device not found

swagger:response peerGetNotFound
*/
type PeerGetNotFound struct {
}

// NewPeerGetNotFound creates PeerGetNotFound with default headers values
func NewPeerGetNotFound() *PeerGetNotFound {

	return &PeerGetNotFound{}
}

// WriteResponse to the client
func (o *PeerGetNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

/*PeerGetDefault error

swagger:response peerGetDefault
*/
type PeerGetDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPeerGetDefault creates PeerGetDefault with default headers values
func NewPeerGetDefault(code int) *PeerGetDefault {
	if code <= 0 {
		code = 500
	}

	return &PeerGetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the peer get default response
func (o *PeerGetDefault) WithStatusCode(code int) *PeerGetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the peer get default response
func (o *PeerGetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the peer get default response
func (o *PeerGetDefault) WithPayload(payload *models.Error) *PeerGetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the peer get default response
func (o *PeerGetDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PeerGetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
